{
  "stats": {
    "suites": 24,
    "tests": 63,
    "passes": 63,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-10T13:52:07.690Z",
    "end": "2025-05-10T13:52:11.330Z",
    "duration": 3640,
    "testsRegistered": 63,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "db4353fc-13b4-49d3-b95f-9408926ac719",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4e40c03a-9043-48fb-a129-efdb4e2fe9c4",
          "title": "Offer-offerCreation API Tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "415b1da1-f2d0-434b-895f-2117c08c0880",
              "title": "register API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "register User1",
                  "fullTitle": "Offer-offerCreation API Tests register API test register User1",
                  "timedOut": false,
                  "duration": 127,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "f74e39f1-4d95-4603-a070-d67315d58345",
                  "parentUUID": "415b1da1-f2d0-434b-895f-2117c08c0880",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "register User2",
                  "fullTitle": "Offer-offerCreation API Tests register API test register User2",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "1a29bd13-ff81-4d24-bfee-ff39f9e164b9",
                  "parentUUID": "415b1da1-f2d0-434b-895f-2117c08c0880",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "d3eca7a3-baa0-42e5-8dab-8f1453229d19",
                  "title": "fail to register cases",
                  "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
                  "file": "\\test\\api.test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "registering with existing email should return 401",
                      "fullTitle": "Offer-offerCreation API Tests register API test fail to register cases registering with existing email should return 401",
                      "timedOut": false,
                      "duration": 8,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                      "err": {},
                      "uuid": "66b0205f-3345-4981-b988-87244b071466",
                      "parentUUID": "d3eca7a3-baa0-42e5-8dab-8f1453229d19",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "registering without email should return 401",
                      "fullTitle": "Offer-offerCreation API Tests register API test fail to register cases registering without email should return 401",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                      "err": {},
                      "uuid": "11c2e7c4-be79-4364-aecc-2a40c3cf10cc",
                      "parentUUID": "d3eca7a3-baa0-42e5-8dab-8f1453229d19",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "66b0205f-3345-4981-b988-87244b071466",
                    "11c2e7c4-be79-4364-aecc-2a40c3cf10cc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [
                "f74e39f1-4d95-4603-a070-d67315d58345",
                "1a29bd13-ff81-4d24-bfee-ff39f9e164b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 208,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "22739b40-8a71-465a-956b-de4e11777d54",
              "title": "createOffer",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "createOffer1",
                  "fullTitle": "Offer-offerCreation API Tests createOffer createOffer1",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "fa43afbb-ce9d-4b1f-89fd-f72761b6ac1e",
                  "parentUUID": "22739b40-8a71-465a-956b-de4e11777d54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "createOffer2",
                  "fullTitle": "Offer-offerCreation API Tests createOffer createOffer2",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "938d095e-8d22-44d1-8c98-2b20f65099ef",
                  "parentUUID": "22739b40-8a71-465a-956b-de4e11777d54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "createOffer3",
                  "fullTitle": "Offer-offerCreation API Tests createOffer createOffer3",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "89175482-d5ea-4e8f-95e5-76b6160c2ef3",
                  "parentUUID": "22739b40-8a71-465a-956b-de4e11777d54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "missing title should return 401",
                  "fullTitle": "Offer-offerCreation API Tests createOffer missing title should return 401",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "694df86c-99c2-44f4-8047-a22ccd90d774",
                  "parentUUID": "22739b40-8a71-465a-956b-de4e11777d54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "missing token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests createOffer missing token should return 401",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "71a99c67-866f-4d9f-8369-a8a414d389e7",
                  "parentUUID": "22739b40-8a71-465a-956b-de4e11777d54",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa43afbb-ce9d-4b1f-89fd-f72761b6ac1e",
                "938d095e-8d22-44d1-8c98-2b20f65099ef",
                "89175482-d5ea-4e8f-95e5-76b6160c2ef3",
                "694df86c-99c2-44f4-8047-a22ccd90d774",
                "71a99c67-866f-4d9f-8369-a8a414d389e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 95,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "413a82c2-1702-491e-a57e-b99c7de9df55",
              "title": "editOffer",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "edit offer successfully",
                  "fullTitle": "Offer-offerCreation API Tests editOffer edit offer successfully",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "8d7a16d0-6da0-458d-b733-d719c8dbb2a0",
                  "parentUUID": "413a82c2-1702-491e-a57e-b99c7de9df55",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to edit offer with wrong user should return 401",
                  "fullTitle": "Offer-offerCreation API Tests editOffer fail to edit offer with wrong user should return 401",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "7453c7d3-e06d-435e-8d59-a1e05ddfe8b4",
                  "parentUUID": "413a82c2-1702-491e-a57e-b99c7de9df55",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests editOffer without token should return 401",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4a44542c-8412-4b00-b264-9eb52cae1ddd",
                  "parentUUID": "413a82c2-1702-491e-a57e-b99c7de9df55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d7a16d0-6da0-458d-b733-d719c8dbb2a0",
                "7453c7d3-e06d-435e-8d59-a1e05ddfe8b4",
                "4a44542c-8412-4b00-b264-9eb52cae1ddd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "05012869-491c-4746-b425-145b37869bda",
              "title": "getOffer",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getOffer successfully",
                  "fullTitle": "Offer-offerCreation API Tests getOffer getOffer successfully",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "a81c7cce-2e9d-47fd-8d6d-22a11e60b898",
                  "parentUUID": "05012869-491c-4746-b425-145b37869bda",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests getOffer without token should return 401",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "3bef7dca-504d-4d97-9ea1-332a1b2eabf7",
                  "parentUUID": "05012869-491c-4746-b425-145b37869bda",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a81c7cce-2e9d-47fd-8d6d-22a11e60b898",
                "3bef7dca-504d-4d97-9ea1-332a1b2eabf7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "5b96125a-b0d8-4df5-9f6e-bb5d3c9424ec",
              "title": "getOffers",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getOffers successfully",
                  "fullTitle": "Offer-offerCreation API Tests getOffers getOffers successfully",
                  "timedOut": false,
                  "duration": 1262,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "fe2747ce-16da-4cb5-900d-6cda380c1806",
                  "parentUUID": "5b96125a-b0d8-4df5-9f6e-bb5d3c9424ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests getOffers without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "021eb58d-74ae-4582-9a2c-f814ce30a97e",
                  "parentUUID": "5b96125a-b0d8-4df5-9f6e-bb5d3c9424ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe2747ce-16da-4cb5-900d-6cda380c1806",
                "021eb58d-74ae-4582-9a2c-f814ce30a97e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1264,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e5f4af1e-4d69-4937-90eb-255fac1a6d08",
              "title": "deleteOffer",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deleteOffer successfully",
                  "fullTitle": "Offer-offerCreation API Tests deleteOffer deleteOffer successfully",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "f408c871-efee-4d35-8c39-15b995909c80",
                  "parentUUID": "e5f4af1e-4d69-4937-90eb-255fac1a6d08",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests deleteOffer without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4471caf8-216c-4f77-bda7-520eb56939ee",
                  "parentUUID": "e5f4af1e-4d69-4937-90eb-255fac1a6d08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f408c871-efee-4d35-8c39-15b995909c80",
                "4471caf8-216c-4f77-bda7-520eb56939ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d4ea99e5-fbea-4e27-8400-f8e96556181c",
              "title": "template",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "template successfully",
                  "fullTitle": "Offer-offerCreation API Tests template template successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "f81ab821-8bfd-45f3-b544-1c012b58a0d1",
                  "parentUUID": "d4ea99e5-fbea-4e27-8400-f8e96556181c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-offerCreation API Tests template without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "86c2f18a-16c7-43c2-9bb6-3c25ca611823",
                  "parentUUID": "d4ea99e5-fbea-4e27-8400-f8e96556181c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f81ab821-8bfd-45f3-b544-1c012b58a0d1",
                "86c2f18a-16c7-43c2-9bb6-3c25ca611823"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
          "title": "Offer-Booking system && User API tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "register",
              "fullTitle": "Offer-Booking system && User API tests register",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "ae15c2c5-83cc-4bf7-8383-ef6a3f0f31d3",
              "parentUUID": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "register",
              "fullTitle": "Offer-Booking system && User API tests register",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "1e252441-39ba-4f9c-8f48-a9629bc155b4",
              "parentUUID": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer successfully",
              "fullTitle": "Offer-Booking system && User API tests createOffer successfully",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "cdc3bb4e-6860-4411-bbca-5bb1b77a8277",
              "parentUUID": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer",
              "fullTitle": "Offer-Booking system && User API tests createOffer",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "1005d8d4-1bed-44e7-8275-43e006e6ce3d",
              "parentUUID": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer",
              "fullTitle": "Offer-Booking system && User API tests createOffer",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "8d8c535b-6585-4a46-acff-0ee3229c0eec",
              "parentUUID": "f99126a6-90ec-4ab6-87ac-930a0825ff1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
              "title": "addRequests API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "addRequests1 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests1 successfully",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "0cddf214-e63a-4fe3-b994-9be4f00e9694",
                  "parentUUID": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "addRequests2 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests2 successfully",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "37095fae-d560-4234-bbf5-7be908a06375",
                  "parentUUID": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "addRequests3 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests3 successfully",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b792e20d-7d77-429d-b31b-0c3057b909b5",
                  "parentUUID": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to request own offer should return 401",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test fail to request own offer should return 401",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "1d36d36c-393d-458b-a52e-fba3a1a0fad9",
                  "parentUUID": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "0e09b6a0-c9bd-4808-93db-f0e08af7037e",
                  "parentUUID": "4ef02cbd-0529-44e4-99f8-c1d867c418cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0cddf214-e63a-4fe3-b994-9be4f00e9694",
                "37095fae-d560-4234-bbf5-7be908a06375",
                "b792e20d-7d77-429d-b31b-0c3057b909b5",
                "1d36d36c-393d-458b-a52e-fba3a1a0fad9",
                "0e09b6a0-c9bd-4808-93db-f0e08af7037e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 99,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "99e129eb-3465-4083-80f0-3340a96080f8",
              "title": "withdrawRequest API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "withdraw Request successfully",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test withdraw Request successfully",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "24a17815-1d9f-4afe-83e9-513aa4aa87b4",
                  "parentUUID": "99e129eb-3465-4083-80f0-3340a96080f8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to withdrawRequest with invalid requestId should return 401",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test fail to withdrawRequest with invalid requestId should return 401",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "51eefebb-3ffc-4c73-b270-accdbf61c491",
                  "parentUUID": "99e129eb-3465-4083-80f0-3340a96080f8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test without token should return 401",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "19ab3758-c45a-40be-acc5-e4322efc8005",
                  "parentUUID": "99e129eb-3465-4083-80f0-3340a96080f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24a17815-1d9f-4afe-83e9-513aa4aa87b4",
                "51eefebb-3ffc-4c73-b270-accdbf61c491",
                "19ab3758-c45a-40be-acc5-e4322efc8005"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 42,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3e7a261b-62ab-471e-ba3b-070c20f26362",
              "title": "acceptOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login successfully",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test login successfully",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "0d49ecfd-8e4e-4b29-bb1b-6ff3d5f60ca0",
                  "parentUUID": "3e7a261b-62ab-471e-ba3b-070c20f26362",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "acceptOffer successfully",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test acceptOffer successfully",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "bfd0fde0-da60-45fc-b637-9da0b64afaa1",
                  "parentUUID": "3e7a261b-62ab-471e-ba3b-070c20f26362",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to accept offer by non-owner user should return 401",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test fail to accept offer by non-owner user should return 401",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "d0d666d3-1d56-4ae8-9bbd-8b92997075b3",
                  "parentUUID": "3e7a261b-62ab-471e-ba3b-070c20f26362",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d49ecfd-8e4e-4b29-bb1b-6ff3d5f60ca0",
                "bfd0fde0-da60-45fc-b637-9da0b64afaa1",
                "d0d666d3-1d56-4ae8-9bbd-8b92997075b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 126,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "37a9a47c-a08b-447a-a517-db4d78ccc626",
              "title": "rejectOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "rejectOffer successfully",
                  "fullTitle": "Offer-Booking system && User API tests rejectOffer API test rejectOffer successfully",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "6b2c1550-742c-4a0c-bf75-61a4e5612751",
                  "parentUUID": "37a9a47c-a08b-447a-a517-db4d78ccc626",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to reject offer by non-owner should return 401",
                  "fullTitle": "Offer-Booking system && User API tests rejectOffer API test fail to reject offer by non-owner should return 401",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "775aa6b8-d103-4feb-aaf1-4333d25da73b",
                  "parentUUID": "37a9a47c-a08b-447a-a517-db4d78ccc626",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b2c1550-742c-4a0c-bf75-61a4e5612751",
                "775aa6b8-d103-4feb-aaf1-4333d25da73b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "65e5dcc5-3a3d-4149-9235-cb4836e771f7",
              "title": "giveReview API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test login",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "9411c7d0-834f-468e-978f-16f88c3cad60",
                  "parentUUID": "65e5dcc5-3a3d-4149-9235-cb4836e771f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "giveReview successfully",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test giveReview successfully",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "1f82c241-d5a3-432e-b554-8e355c47ee6e",
                  "parentUUID": "65e5dcc5-3a3d-4149-9235-cb4836e771f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to giveReview with invalid requestId should return 401",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test fail to giveReview with invalid requestId should return 401",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "fc424853-0780-497d-8afc-b04a834024ce",
                  "parentUUID": "65e5dcc5-3a3d-4149-9235-cb4836e771f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9411c7d0-834f-468e-978f-16f88c3cad60",
                "1f82c241-d5a3-432e-b554-8e355c47ee6e",
                "fc424853-0780-497d-8afc-b04a834024ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 136,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d2661bb3-5fc9-4350-838d-0b300495eec0",
              "title": "completeOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "job seeker complete Offer successfully",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test job seeker complete Offer successfully",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "c10c2ea0-81e9-48d0-80d5-cbc1c9c4eccc",
                  "parentUUID": "d2661bb3-5fc9-4350-838d-0b300495eec0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "login",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test login",
                  "timedOut": false,
                  "duration": 92,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "deffa152-62bf-4b29-937f-de7c31f3bda6",
                  "parentUUID": "d2661bb3-5fc9-4350-838d-0b300495eec0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "job provider complete Offer successsfully, the status of request is complete",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test job provider complete Offer successsfully, the status of request is complete",
                  "timedOut": false,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "98965299-b68e-4236-a254-c1134c7b3778",
                  "parentUUID": "d2661bb3-5fc9-4350-838d-0b300495eec0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to completeOffer before accept should return 401",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test fail to completeOffer before accept should return 401",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "14e64e3e-7ba8-4259-bd95-244969d59112",
                  "parentUUID": "d2661bb3-5fc9-4350-838d-0b300495eec0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c10c2ea0-81e9-48d0-80d5-cbc1c9c4eccc",
                "deffa152-62bf-4b29-937f-de7c31f3bda6",
                "98965299-b68e-4236-a254-c1134c7b3778",
                "14e64e3e-7ba8-4259-bd95-244969d59112"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 188,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9d06bfe5-2e6d-4956-828a-df6a48c6eb5b",
              "title": "myOffers API test}",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "myOffers",
                  "fullTitle": "Offer-Booking system && User API tests myOffers API test} myOffers",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "16a9c4eb-c14b-4669-a63c-ed7af16738d8",
                  "parentUUID": "9d06bfe5-2e6d-4956-828a-df6a48c6eb5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests myOffers API test} without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "85dbad7c-dec8-4abd-b9be-14cb0a51b22c",
                  "parentUUID": "9d06bfe5-2e6d-4956-828a-df6a48c6eb5b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "16a9c4eb-c14b-4669-a63c-ed7af16738d8",
                "85dbad7c-dec8-4abd-b9be-14cb0a51b22c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3624a362-0c7a-43fa-899f-11b62d796e5a",
              "title": "getMyRequestsToOffers API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getMyRequestsToOffers successfully",
                  "fullTitle": "Offer-Booking system && User API tests getMyRequestsToOffers API test getMyRequestsToOffers successfully",
                  "timedOut": false,
                  "duration": 263,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "06320748-c71b-4743-b331-c329a2c1a37b",
                  "parentUUID": "3624a362-0c7a-43fa-899f-11b62d796e5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getMyRequestsToOffers API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "1db17927-b8ca-4c7f-a1cf-afdb53fc5c07",
                  "parentUUID": "3624a362-0c7a-43fa-899f-11b62d796e5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06320748-c71b-4743-b331-c329a2c1a37b",
                "1db17927-b8ca-4c7f-a1cf-afdb53fc5c07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 265,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "248befbe-ce40-4288-a66e-d04d4884400b",
              "title": "getRequestsOnMyOffers API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getRequestsOnMyOffers successfully",
                  "fullTitle": "Offer-Booking system && User API tests getRequestsOnMyOffers API test getRequestsOnMyOffers successfully",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "cdbb835a-22f0-4db7-b6aa-7b19adde652e",
                  "parentUUID": "248befbe-ce40-4288-a66e-d04d4884400b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getRequestsOnMyOffers API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "09ecb126-46d0-4df4-be4b-7f67a5bc4ff1",
                  "parentUUID": "248befbe-ce40-4288-a66e-d04d4884400b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cdbb835a-22f0-4db7-b6aa-7b19adde652e",
                "09ecb126-46d0-4df4-be4b-7f67a5bc4ff1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "ba495c0f-e521-45f5-81ab-2791f39a1fb8",
              "title": "getAllRequests API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getAllRequests successfully",
                  "fullTitle": "Offer-Booking system && User API tests getAllRequests API test getAllRequests successfully",
                  "timedOut": false,
                  "duration": 279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "846dd391-6515-4c93-807a-e7259327bacf",
                  "parentUUID": "ba495c0f-e521-45f5-81ab-2791f39a1fb8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getAllRequests API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "9ac1ae02-fdd9-4467-a82b-c25d73368cbb",
                  "parentUUID": "ba495c0f-e521-45f5-81ab-2791f39a1fb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "846dd391-6515-4c93-807a-e7259327bacf",
                "9ac1ae02-fdd9-4467-a82b-c25d73368cbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "5c6b6ef0-928d-4860-8916-e96467034157",
              "title": "getSelf API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getSelf successfully",
                  "fullTitle": "Offer-Booking system && User API tests getSelf API test getSelf successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "cb77ec74-3ffd-4425-876b-91ce8c708980",
                  "parentUUID": "5c6b6ef0-928d-4860-8916-e96467034157",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getSelf API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "76673802-6980-4707-af8b-dfba89d1a9c5",
                  "parentUUID": "5c6b6ef0-928d-4860-8916-e96467034157",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb77ec74-3ffd-4425-876b-91ce8c708980",
                "76673802-6980-4707-af8b-dfba89d1a9c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "36cfc682-ab3c-4eb9-8c2e-bae16874e46a",
              "title": "changeSelf API tests",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "changeSelf successfully",
                  "fullTitle": "Offer-Booking system && User API tests changeSelf API tests changeSelf successfully",
                  "timedOut": false,
                  "duration": 89,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "bbdc00ac-ad0b-409d-8177-673271e3771c",
                  "parentUUID": "36cfc682-ab3c-4eb9-8c2e-bae16874e46a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests changeSelf API tests without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b55ac3ee-8edb-413d-902a-07c887c56070",
                  "parentUUID": "36cfc682-ab3c-4eb9-8c2e-bae16874e46a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbdc00ac-ad0b-409d-8177-673271e3771c",
                "b55ac3ee-8edb-413d-902a-07c887c56070"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 91,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "252f9cf2-5ad6-42d7-bba8-49b1b4b711d5",
              "title": "getReviews API tests",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getReviews",
                  "fullTitle": "Offer-Booking system && User API tests getReviews API tests getReviews",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "6b5a451e-a93e-4f7e-8d33-869c1a2a5cb4",
                  "parentUUID": "252f9cf2-5ad6-42d7-bba8-49b1b4b711d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getReviews API tests without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "790a11a4-b135-49fb-b6fb-29cff35b6681",
                  "parentUUID": "252f9cf2-5ad6-42d7-bba8-49b1b4b711d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b5a451e-a93e-4f7e-8d33-869c1a2a5cb4",
                "790a11a4-b135-49fb-b6fb-29cff35b6681"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "ae15c2c5-83cc-4bf7-8383-ef6a3f0f31d3",
            "1e252441-39ba-4f9c-8f48-a9629bc155b4",
            "cdc3bb4e-6860-4411-bbca-5bb1b77a8277",
            "1005d8d4-1bed-44e7-8275-43e006e6ce3d",
            "8d8c535b-6585-4a46-acff-0ee3229c0eec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "dc5823ce-169b-4e57-8617-fb5deb93e0fd",
          "title": "Image upload API tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data preparation--register",
              "fullTitle": "Image upload API tests data preparation--register",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "0fd93e0a-8bf2-48b8-9178-b3cfea50ddc0",
              "parentUUID": "dc5823ce-169b-4e57-8617-fb5deb93e0fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data preparation--createOffer1",
              "fullTitle": "Image upload API tests data preparation--createOffer1",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "3fe5b0de-a662-48a1-a53d-f9e8e1469c7c",
              "parentUUID": "dc5823ce-169b-4e57-8617-fb5deb93e0fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "change picture successfully",
              "fullTitle": "Image upload API tests change picture successfully",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "ec199bfe-a816-487a-ba90-f8468bba8c27",
              "parentUUID": "dc5823ce-169b-4e57-8617-fb5deb93e0fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upload picture for offer successfully",
              "fullTitle": "Image upload API tests upload picture for offer successfully",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "6c2daa56-4b84-4b8d-8c23-861b56e48b77",
              "parentUUID": "dc5823ce-169b-4e57-8617-fb5deb93e0fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fd93e0a-8bf2-48b8-9178-b3cfea50ddc0",
            "3fe5b0de-a662-48a1-a53d-f9e8e1469c7c",
            "ec199bfe-a816-487a-ba90-f8468bba8c27",
            "6c2daa56-4b84-4b8d-8c23-861b56e48b77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}