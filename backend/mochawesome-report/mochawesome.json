{
  "stats": {
    "suites": 27,
    "tests": 67,
    "passes": 67,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-11T14:00:54.065Z",
    "end": "2025-05-11T14:00:57.395Z",
    "duration": 3330,
    "testsRegistered": 67,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9b1ff31f-2349-4253-add9-8397e7f1c0e9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fad908e9-aa33-42df-9be1-9b205572b0ea",
          "title": "User API tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "82f135b5-3650-4a97-a425-4c85ad7b9fed",
              "title": "register API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "register User1",
                  "fullTitle": "User API tests register API test register User1",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "8d575c9f-2ce8-4423-a0d6-ee3a12e46518",
                  "parentUUID": "82f135b5-3650-4a97-a425-4c85ad7b9fed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "register User2",
                  "fullTitle": "User API tests register API test register User2",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "cf6588bd-11c8-43ae-98d4-8ce433ca4d2c",
                  "parentUUID": "82f135b5-3650-4a97-a425-4c85ad7b9fed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "registering with existing email should return 401",
                  "fullTitle": "User API tests register API test registering with existing email should return 401",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4144e1af-522a-4a35-956e-e1745c2834f4",
                  "parentUUID": "82f135b5-3650-4a97-a425-4c85ad7b9fed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "registering without email should return 401",
                  "fullTitle": "User API tests register API test registering without email should return 401",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "1f553d64-f679-4b4c-932f-62f47c514b96",
                  "parentUUID": "82f135b5-3650-4a97-a425-4c85ad7b9fed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d575c9f-2ce8-4423-a0d6-ee3a12e46518",
                "cf6588bd-11c8-43ae-98d4-8ce433ca4d2c",
                "4144e1af-522a-4a35-956e-e1745c2834f4",
                "1f553d64-f679-4b4c-932f-62f47c514b96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 219,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a443e095-f055-4ee0-a6e0-d67c2cf3e658",
              "title": "login API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login successfully",
                  "fullTitle": "User API tests login API test login successfully",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "199d1c39-71c4-41ec-a120-70125fcc3a3e",
                  "parentUUID": "a443e095-f055-4ee0-a6e0-d67c2cf3e658",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "login with wrong password should return 401",
                  "fullTitle": "User API tests login API test login with wrong password should return 401",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "d5b70537-3b64-4564-b8e7-7b41a737f408",
                  "parentUUID": "a443e095-f055-4ee0-a6e0-d67c2cf3e658",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "199d1c39-71c4-41ec-a120-70125fcc3a3e",
                "d5b70537-3b64-4564-b8e7-7b41a737f408"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "04de8860-926d-4d08-9ff4-21b42b9a86c7",
              "title": "getSelf API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getSelf successfully",
                  "fullTitle": "User API tests getSelf API test getSelf successfully",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b8b9962e-a9f8-468a-9e68-56503435638f",
                  "parentUUID": "04de8860-926d-4d08-9ff4-21b42b9a86c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getSelf without token should return 401",
                  "fullTitle": "User API tests getSelf API test getSelf without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b903dba3-26d8-4aa7-9954-c37825444b44",
                  "parentUUID": "04de8860-926d-4d08-9ff4-21b42b9a86c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8b9962e-a9f8-468a-9e68-56503435638f",
                "b903dba3-26d8-4aa7-9954-c37825444b44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7a388a76-6b67-4e30-888f-929c5d7765a0",
              "title": "changeSelf API tests",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "changeSelf successfully",
                  "fullTitle": "User API tests changeSelf API tests changeSelf successfully",
                  "timedOut": false,
                  "duration": 94,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "de246324-c9a8-4814-8b9d-bfd1463a3350",
                  "parentUUID": "7a388a76-6b67-4e30-888f-929c5d7765a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getSelf without token should return 401",
                  "fullTitle": "User API tests changeSelf API tests getSelf without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "5b3e8f1e-a918-460e-9283-2737d8ba5720",
                  "parentUUID": "7a388a76-6b67-4e30-888f-929c5d7765a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de246324-c9a8-4814-8b9d-bfd1463a3350",
                "5b3e8f1e-a918-460e-9283-2737d8ba5720"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 96,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "52b90015-f8f1-41f6-ba72-2a13daedce26",
          "title": "Offer-Creation API Tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "register User1",
              "fullTitle": "Offer-Creation API Tests register User1",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "ce7d6650-45b6-4432-a2e5-ad9ebd13fa93",
              "parentUUID": "52b90015-f8f1-41f6-ba72-2a13daedce26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "register User2",
              "fullTitle": "Offer-Creation API Tests register User2",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "8bbff249-a071-4e61-aacf-bc3e942207e2",
              "parentUUID": "52b90015-f8f1-41f6-ba72-2a13daedce26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1b3b6610-1c61-4722-9608-592efa0d00f1",
              "title": "createOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "createOffer1",
                  "fullTitle": "Offer-Creation API Tests createOffer API test createOffer1",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "e2be8261-4503-4a6d-869c-8acfb702b139",
                  "parentUUID": "1b3b6610-1c61-4722-9608-592efa0d00f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "createOffer2",
                  "fullTitle": "Offer-Creation API Tests createOffer API test createOffer2",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "d70de412-670e-4d0b-b584-8475cdbde6d1",
                  "parentUUID": "1b3b6610-1c61-4722-9608-592efa0d00f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "createOffer3",
                  "fullTitle": "Offer-Creation API Tests createOffer API test createOffer3",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "2ba83e49-6167-4b05-998e-34aa19c65088",
                  "parentUUID": "1b3b6610-1c61-4722-9608-592efa0d00f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "missing title should return 401",
                  "fullTitle": "Offer-Creation API Tests createOffer API test missing title should return 401",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "55ea39fa-ce1d-4672-a4b8-233ddf90e905",
                  "parentUUID": "1b3b6610-1c61-4722-9608-592efa0d00f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "missing token should return 401",
                  "fullTitle": "Offer-Creation API Tests createOffer API test missing token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "189700e9-cbb5-466e-8569-fbf9a38407f9",
                  "parentUUID": "1b3b6610-1c61-4722-9608-592efa0d00f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2be8261-4503-4a6d-869c-8acfb702b139",
                "d70de412-670e-4d0b-b584-8475cdbde6d1",
                "2ba83e49-6167-4b05-998e-34aa19c65088",
                "55ea39fa-ce1d-4672-a4b8-233ddf90e905",
                "189700e9-cbb5-466e-8569-fbf9a38407f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a462f39d-9ba1-44ea-b426-fae08e3cd6a4",
              "title": "editOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "edit offer successfully",
                  "fullTitle": "Offer-Creation API Tests editOffer API test edit offer successfully",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "57a01c25-c09b-4a17-909d-6f7888e0f575",
                  "parentUUID": "a462f39d-9ba1-44ea-b426-fae08e3cd6a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to edit offer with wrong user should return 401",
                  "fullTitle": "Offer-Creation API Tests editOffer API test fail to edit offer with wrong user should return 401",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "34627c7c-9030-4feb-8e23-8589af90fc2c",
                  "parentUUID": "a462f39d-9ba1-44ea-b426-fae08e3cd6a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Creation API Tests editOffer API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "207012c3-9c97-4a59-afcd-5ce09ca84cdf",
                  "parentUUID": "a462f39d-9ba1-44ea-b426-fae08e3cd6a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57a01c25-c09b-4a17-909d-6f7888e0f575",
                "34627c7c-9030-4feb-8e23-8589af90fc2c",
                "207012c3-9c97-4a59-afcd-5ce09ca84cdf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "0e6e791b-3c49-4959-87d7-deacea43afa2",
              "title": "getOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getOffer successfully",
                  "fullTitle": "Offer-Creation API Tests getOffer API test getOffer successfully",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "918c7cd8-a0ff-4540-969e-5feac49dd528",
                  "parentUUID": "0e6e791b-3c49-4959-87d7-deacea43afa2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Creation API Tests getOffer API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "50b91b96-5ec2-46d4-b2c1-207168ea78f0",
                  "parentUUID": "0e6e791b-3c49-4959-87d7-deacea43afa2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "918c7cd8-a0ff-4540-969e-5feac49dd528",
                "50b91b96-5ec2-46d4-b2c1-207168ea78f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 30,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a820d882-e42d-4483-a587-0f87e21f2b10",
              "title": "getOffers API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getOffers successfully",
                  "fullTitle": "Offer-Creation API Tests getOffers API test getOffers successfully",
                  "timedOut": false,
                  "duration": 605,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "19337ca4-08e2-44e6-9c9d-6bc2ac00d3eb",
                  "parentUUID": "a820d882-e42d-4483-a587-0f87e21f2b10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Creation API Tests getOffers API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "6aad026a-43b5-43cb-b03e-cdcb45706fec",
                  "parentUUID": "a820d882-e42d-4483-a587-0f87e21f2b10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19337ca4-08e2-44e6-9c9d-6bc2ac00d3eb",
                "6aad026a-43b5-43cb-b03e-cdcb45706fec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 607,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "58231b61-4bad-499a-a46a-5d471a0f75c5",
              "title": "deleteOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deleteOffer successfully",
                  "fullTitle": "Offer-Creation API Tests deleteOffer API test deleteOffer successfully",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "7d6b8baf-aeee-4f57-a067-506ef0874b41",
                  "parentUUID": "58231b61-4bad-499a-a46a-5d471a0f75c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Creation API Tests deleteOffer API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "dc1e21c6-838e-4ec5-94a5-3d0c6855443b",
                  "parentUUID": "58231b61-4bad-499a-a46a-5d471a0f75c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d6b8baf-aeee-4f57-a067-506ef0874b41",
                "dc1e21c6-838e-4ec5-94a5-3d0c6855443b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "226fad34-a424-4ed6-bbff-6db2a03b4acf",
              "title": "template API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "template successfully",
                  "fullTitle": "Offer-Creation API Tests template API test template successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "456a70dd-2e22-43c1-b3e0-4722284b5bb0",
                  "parentUUID": "226fad34-a424-4ed6-bbff-6db2a03b4acf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Creation API Tests template API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "2b6ee81c-e3dc-4cc7-b76f-ebfd55161b92",
                  "parentUUID": "226fad34-a424-4ed6-bbff-6db2a03b4acf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "456a70dd-2e22-43c1-b3e0-4722284b5bb0",
                "2b6ee81c-e3dc-4cc7-b76f-ebfd55161b92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "ce7d6650-45b6-4432-a2e5-ad9ebd13fa93",
            "8bbff249-a071-4e61-aacf-bc3e942207e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
          "title": "Offer-Booking system && User API tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "register",
              "fullTitle": "Offer-Booking system && User API tests register",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "3b1d3d51-55dc-4eab-853c-eff969a16ed4",
              "parentUUID": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "register",
              "fullTitle": "Offer-Booking system && User API tests register",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "f0316e39-8b48-4f4b-a367-e16b3e099260",
              "parentUUID": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer",
              "fullTitle": "Offer-Booking system && User API tests createOffer",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "5a50aff9-6e4c-46bc-a3d4-f845295fbd50",
              "parentUUID": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer",
              "fullTitle": "Offer-Booking system && User API tests createOffer",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "14621238-fd57-4545-8aef-3d310d654fef",
              "parentUUID": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "createOffer",
              "fullTitle": "Offer-Booking system && User API tests createOffer",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "3e665025-26ab-4550-8eaf-702c04dd234e",
              "parentUUID": "baa318f7-4ac7-4963-bfbe-4c2726ebc48b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
              "title": "addRequests API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "addRequests1 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests1 successfully",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4aeb9934-5d47-4e33-b4a1-5eacd8dc438d",
                  "parentUUID": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "addRequests2 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests2 successfully",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "33230187-1682-49c8-a805-eca127aa3939",
                  "parentUUID": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "addRequests3 successfully",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test addRequests3 successfully",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "d19f179c-c3cc-43fc-805a-cdef86cad2e8",
                  "parentUUID": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to request own offer should return 401",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test fail to request own offer should return 401",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b683231a-5c8c-490d-8f3a-01bcf4161f57",
                  "parentUUID": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests addRequests API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "09535132-fd90-4201-a8d7-6ced47e62cd7",
                  "parentUUID": "cb20a6c2-29c2-43f1-be15-cb95b62f6126",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4aeb9934-5d47-4e33-b4a1-5eacd8dc438d",
                "33230187-1682-49c8-a805-eca127aa3939",
                "d19f179c-c3cc-43fc-805a-cdef86cad2e8",
                "b683231a-5c8c-490d-8f3a-01bcf4161f57",
                "09535132-fd90-4201-a8d7-6ced47e62cd7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "aa1c47b5-f631-40bb-9b9e-3676a15ac8d5",
              "title": "withdrawRequest API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "withdraw Request successfully",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test withdraw Request successfully",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "8c411b40-7242-4fec-a857-33a2fad8679c",
                  "parentUUID": "aa1c47b5-f631-40bb-9b9e-3676a15ac8d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to withdrawRequest with invalid requestId should return 401",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test fail to withdrawRequest with invalid requestId should return 401",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4cbc7789-5ae3-4dff-8856-faf339b0fa4d",
                  "parentUUID": "aa1c47b5-f631-40bb-9b9e-3676a15ac8d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests withdrawRequest API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "2ee5b203-43ff-473b-a492-e3b1f344958a",
                  "parentUUID": "aa1c47b5-f631-40bb-9b9e-3676a15ac8d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c411b40-7242-4fec-a857-33a2fad8679c",
                "4cbc7789-5ae3-4dff-8856-faf339b0fa4d",
                "2ee5b203-43ff-473b-a492-e3b1f344958a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 68,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "8d9389db-f534-4f2c-8ef3-5c72b658a07c",
              "title": "acceptOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login successfully",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test login successfully",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "9e0b297a-3577-4361-8a82-fb3cc8806195",
                  "parentUUID": "8d9389db-f534-4f2c-8ef3-5c72b658a07c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "acceptOffer successfully",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test acceptOffer successfully",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b61119f4-f3f2-4304-870f-0f87ad968e8d",
                  "parentUUID": "8d9389db-f534-4f2c-8ef3-5c72b658a07c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to accept offer by non-owner user should return 401",
                  "fullTitle": "Offer-Booking system && User API tests acceptOffer API test fail to accept offer by non-owner user should return 401",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "d3a40832-33ab-46d6-87b9-b1140cc3b34e",
                  "parentUUID": "8d9389db-f534-4f2c-8ef3-5c72b658a07c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e0b297a-3577-4361-8a82-fb3cc8806195",
                "b61119f4-f3f2-4304-870f-0f87ad968e8d",
                "d3a40832-33ab-46d6-87b9-b1140cc3b34e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "dd9d2c24-7a56-4590-9c64-184e5a494144",
              "title": "rejectOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "rejectOffer successfully",
                  "fullTitle": "Offer-Booking system && User API tests rejectOffer API test rejectOffer successfully",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "c68d8a0f-7d96-44ee-bbe1-79c7c9736572",
                  "parentUUID": "dd9d2c24-7a56-4590-9c64-184e5a494144",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to reject offer by non-owner should return 401",
                  "fullTitle": "Offer-Booking system && User API tests rejectOffer API test fail to reject offer by non-owner should return 401",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "ea32b6e4-a721-48f9-b9a7-d92c7180b4f7",
                  "parentUUID": "dd9d2c24-7a56-4590-9c64-184e5a494144",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c68d8a0f-7d96-44ee-bbe1-79c7c9736572",
                "ea32b6e4-a721-48f9-b9a7-d92c7180b4f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "dc3a9262-7e19-4e56-9558-f5af7b1b46d9",
              "title": "giveReview API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test login",
                  "timedOut": false,
                  "duration": 89,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "86ed766a-1d95-4397-99ca-41183d40f662",
                  "parentUUID": "dc3a9262-7e19-4e56-9558-f5af7b1b46d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "giveReview successfully",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test giveReview successfully",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "a6bd2230-c09e-4238-8c54-753f6697a7a7",
                  "parentUUID": "dc3a9262-7e19-4e56-9558-f5af7b1b46d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to giveReview with invalid requestId should return 401",
                  "fullTitle": "Offer-Booking system && User API tests giveReview API test fail to giveReview with invalid requestId should return 401",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "4a58ee74-0650-43b8-9f2a-92487016052e",
                  "parentUUID": "dc3a9262-7e19-4e56-9558-f5af7b1b46d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86ed766a-1d95-4397-99ca-41183d40f662",
                "a6bd2230-c09e-4238-8c54-753f6697a7a7",
                "4a58ee74-0650-43b8-9f2a-92487016052e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 174,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "951185e6-7195-4021-8653-a3702c622be4",
              "title": "completeOffer API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "job seeker complete Offer successfully",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test job seeker complete Offer successfully",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "46462964-ada3-48a9-90e0-15d452de89c9",
                  "parentUUID": "951185e6-7195-4021-8653-a3702c622be4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "login",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test login",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "ff00d606-70af-402e-b85f-97db85a900ff",
                  "parentUUID": "951185e6-7195-4021-8653-a3702c622be4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "job provider complete Offer successsfully, the status of request is complete",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test job provider complete Offer successsfully, the status of request is complete",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "90a57843-7de7-4814-bba0-59b9c7ef0d9a",
                  "parentUUID": "951185e6-7195-4021-8653-a3702c622be4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fail to completeOffer before accept should return 401",
                  "fullTitle": "Offer-Booking system && User API tests completeOffer API test fail to completeOffer before accept should return 401",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "7665cb3d-e9e1-4dc9-b311-0e237e38380d",
                  "parentUUID": "951185e6-7195-4021-8653-a3702c622be4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46462964-ada3-48a9-90e0-15d452de89c9",
                "ff00d606-70af-402e-b85f-97db85a900ff",
                "90a57843-7de7-4814-bba0-59b9c7ef0d9a",
                "7665cb3d-e9e1-4dc9-b311-0e237e38380d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 228,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3d03316d-dc05-4e1b-bb88-a14f0136ccf2",
              "title": "myOffers API test}",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "myOffers successfully",
                  "fullTitle": "Offer-Booking system && User API tests myOffers API test} myOffers successfully",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "0d70842b-cdda-4f3c-8175-65e812d8f957",
                  "parentUUID": "3d03316d-dc05-4e1b-bb88-a14f0136ccf2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests myOffers API test} without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "93cddf98-86b5-4bf6-ba52-ea9aed49c602",
                  "parentUUID": "3d03316d-dc05-4e1b-bb88-a14f0136ccf2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d70842b-cdda-4f3c-8175-65e812d8f957",
                "93cddf98-86b5-4bf6-ba52-ea9aed49c602"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "71de0668-4ffc-4efc-836a-13b5f80f1562",
              "title": "getMyRequestsToOffers API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getMyRequestsToOffers successfully",
                  "fullTitle": "Offer-Booking system && User API tests getMyRequestsToOffers API test getMyRequestsToOffers successfully",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "ab39ffbe-716c-4749-ae1c-fa878936d4b7",
                  "parentUUID": "71de0668-4ffc-4efc-836a-13b5f80f1562",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getMyRequestsToOffers API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "92cd43be-8896-403a-b4b5-6e6e4669c7e1",
                  "parentUUID": "71de0668-4ffc-4efc-836a-13b5f80f1562",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab39ffbe-716c-4749-ae1c-fa878936d4b7",
                "92cd43be-8896-403a-b4b5-6e6e4669c7e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7846b08d-f3c6-42ef-a4d5-b845c2e9bb62",
              "title": "getRequestsOnMyOffers API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getRequestsOnMyOffers successfully",
                  "fullTitle": "Offer-Booking system && User API tests getRequestsOnMyOffers API test getRequestsOnMyOffers successfully",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "00a58a3a-640d-4a7a-97f4-4931b9a47c91",
                  "parentUUID": "7846b08d-f3c6-42ef-a4d5-b845c2e9bb62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getRequestsOnMyOffers API test without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "42438a6f-2d2e-4685-98a7-d5b5d493b104",
                  "parentUUID": "7846b08d-f3c6-42ef-a4d5-b845c2e9bb62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00a58a3a-640d-4a7a-97f4-4931b9a47c91",
                "42438a6f-2d2e-4685-98a7-d5b5d493b104"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "ad5c832e-d737-4665-9d37-9b09e778e031",
              "title": "getAllRequests API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getAllRequests successfully",
                  "fullTitle": "Offer-Booking system && User API tests getAllRequests API test getAllRequests successfully",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "319443e2-27fe-4d3a-bebc-8214d19a7178",
                  "parentUUID": "ad5c832e-d737-4665-9d37-9b09e778e031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests getAllRequests API test without token should return 401",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "f2cab883-b13d-41a1-97b1-1ed8a6512b59",
                  "parentUUID": "ad5c832e-d737-4665-9d37-9b09e778e031",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "319443e2-27fe-4d3a-bebc-8214d19a7178",
                "f2cab883-b13d-41a1-97b1-1ed8a6512b59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3c3d912f-e029-435d-a558-a5b98c6bc9e8",
              "title": "User - getReviews API tests",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getReviews successfully",
                  "fullTitle": "Offer-Booking system && User API tests User - getReviews API tests getReviews successfully",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "36231713-2fdb-473d-a8a9-4ef6067edce5",
                  "parentUUID": "3c3d912f-e029-435d-a558-a5b98c6bc9e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "without token should return 401",
                  "fullTitle": "Offer-Booking system && User API tests User - getReviews API tests without token should return 401",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "3bdccf76-115f-4d2b-bc34-23bf111b1bce",
                  "parentUUID": "3c3d912f-e029-435d-a558-a5b98c6bc9e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36231713-2fdb-473d-a8a9-4ef6067edce5",
                "3bdccf76-115f-4d2b-bc34-23bf111b1bce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "3b1d3d51-55dc-4eab-853c-eff969a16ed4",
            "f0316e39-8b48-4f4b-a367-e16b3e099260",
            "5a50aff9-6e4c-46bc-a3d4-f845295fbd50",
            "14621238-fd57-4545-8aef-3d310d654fef",
            "3e665025-26ab-4550-8eaf-702c04dd234e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "1bbd7652-a3b0-42a8-b237-44df27006970",
          "title": "Image upload API tests",
          "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data preparation--register",
              "fullTitle": "Image upload API tests data preparation--register",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "22a8be85-6484-4ecb-945d-e7551779f82c",
              "parentUUID": "1bbd7652-a3b0-42a8-b237-44df27006970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data preparation--createOffer1",
              "fullTitle": "Image upload API tests data preparation--createOffer1",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
              "err": {},
              "uuid": "0369a39c-e005-4c51-8fea-d46a5958f703",
              "parentUUID": "1bbd7652-a3b0-42a8-b237-44df27006970",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "0736426c-9af4-4843-84b1-dfde2953610c",
              "title": "User-changePic API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "changePic successfully",
                  "fullTitle": "Image upload API tests User-changePic API test changePic successfully",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "7ae1756f-9903-4282-9086-0dacda252faf",
                  "parentUUID": "0736426c-9af4-4843-84b1-dfde2953610c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ae1756f-9903-4282-9086-0dacda252faf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "412827c7-ad51-4dec-a7ce-2713a43a74a4",
              "title": "Offer-uploadImages API test",
              "fullFile": "D:\\FILES\\uzh\\25spring\\advanced software engineering\\ASE-Project-WeGotThis\\backend\\test\\api.test.js",
              "file": "\\test\\api.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uploadImages successfully",
                  "fullTitle": "Image upload API tests Offer-uploadImages API test uploadImages successfully",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var context = this;\n    try {\n      var promise = fn.call(context);\n      if (promise != null && promise.then != null && promise.catch != null) {\n        return promise.catch(function(err) {\n          markRemainingTestsAndSubSuitesAsPending(context.test);\n          throw err;\n        });\n      } else {\n        return promise;\n      }\n    } catch (ex) {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      throw ex;\n    }",
                  "err": {},
                  "uuid": "b20169ec-a4a9-4141-a157-d5e624b5d816",
                  "parentUUID": "412827c7-ad51-4dec-a7ce-2713a43a74a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b20169ec-a4a9-4141-a157-d5e624b5d816"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 79,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "22a8be85-6484-4ecb-945d-e7551779f82c",
            "0369a39c-e005-4c51-8fea-d46a5958f703"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}